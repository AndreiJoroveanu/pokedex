{"version":3,"file":"moves-Dm0ktf_g.js","names":["useMemo","useAllItemsParam","useAllMovesByGen","useAllMovesByType","ItemResource","useFilteredMoves","allMoves","$","_c","currentGen","currentType","searchQuery","data","filteredByGen","isLoading","isLoadingFG","filteredByType","isLoadingFT","t0","bb0","undefined","length","t1","t2","pg","Set","map","_temp","has","id","filter","filteredMoves","query","replace","trim","p","name","split","join","includes","toLowerCase","searchedMoves","t3","t4","Boolean","t5","moveList","isFiltered","pt","memo","Link","useMove","ItemResource","tmDiscs","tmDiscsImage","Loader","MoveInfoDisplay","CardProps","move","MoveCard","t0","$","_c","t1","id","name","data","t2","String","t3","moveId","t4","backgroundImage","backgroundPosition","type","sprite","x","y","t5","split","join","t6","t7","t8","t9","displayName","useState","VirtuosoGrid","useAllMoves","useFilteredMoves","useScrollRestoration","MoveCard","Footer","Loader","FilterErrorMessage","MoveGrid","$","_c","data","allMoves","isLoading","isLoadingAM","moveList","isFiltered","gridLoaded","setGridLoaded","t0","length","index","name","top","bottom","ready","t1","t2","t3","useEffect","useRouter","Sidebar","ScrollToTopButton","MoveGrid","Route","SplitComponent","router","loadRouteChunk","routesByPath","component"],"sources":["../../src/features/moves/hooks/useFilteredMoves.ts","../../src/features/moves/components/MoveCard.tsx","../../src/features/moves/components/MoveGrid.tsx","../../src/routes/moves/index.tsx?tsr-split=component"],"sourcesContent":["import { useMemo } from \"react\";\r\n\r\nimport { useAllItemsParam } from \"@/hooks/useAllItemsParam.ts\";\r\nimport { useAllMovesByGen, useAllMovesByType } from \"@/hooks/usePokeApi.ts\";\r\nimport type { ItemResource } from \"@/types/types.ts\";\r\n\r\nexport const useFilteredMoves = (allMoves: ItemResource[] | undefined) => {\r\n  // Get the URL Params\r\n  const [currentGen] = useAllItemsParam(\"generation\");\r\n  const [currentType] = useAllItemsParam(\"type\");\r\n  const [searchQuery] = useAllItemsParam(\"q\");\r\n\r\n  // Fetch moves filtered by gen/type\r\n  const { data: filteredByGen, isLoading: isLoadingFG } =\r\n    useAllMovesByGen(currentGen);\r\n  const { data: filteredByType, isLoading: isLoadingFT } =\r\n    useAllMovesByType(currentType);\r\n\r\n  // Move filtering\r\n  const filteredMoves = useMemo(() => {\r\n    // Abort if the all moves list hasn't fetched yet\r\n    if (!allMoves) return;\r\n\r\n    // If there is a gen and a type selected\r\n    if (filteredByGen?.length && filteredByType?.length)\r\n      return filteredByGen.filter((pg) =>\r\n        new Set(filteredByType.map((pt) => pt.id)).has(pg.id),\r\n      );\r\n\r\n    // If there is a gen selected\r\n    if (filteredByGen?.length) return filteredByGen;\r\n\r\n    // If there is a type selected\r\n    if (filteredByType?.length) return filteredByType;\r\n\r\n    // No filtering\r\n    return allMoves;\r\n  }, [allMoves, filteredByGen, filteredByType]);\r\n\r\n  // Displayed moves (after search query filtering, if needed)\r\n  const searchedMoves = useMemo(() => {\r\n    // Removes non-alphanumerical characters from search query\r\n    const query = searchQuery?.replace(/[^0-9a-z]/gi, \"\").trim();\r\n\r\n    return filteredMoves && query?.length\r\n      ? filteredMoves.filter((p) =>\r\n          p.name.split(\"-\").join(\"\").includes(query.toLowerCase()),\r\n        )\r\n      : filteredMoves;\r\n  }, [filteredMoves, searchQuery]);\r\n\r\n  return {\r\n    moveList: searchedMoves,\r\n    isLoading: isLoadingFG || isLoadingFT,\r\n    isFiltered: Boolean(currentGen ?? currentType ?? searchQuery),\r\n  };\r\n};\r\n","import { memo } from \"react\";\nimport { Link } from \"@tanstack/react-router\";\n\nimport { useMove } from \"@/hooks/usePokeApi.ts\";\nimport type { ItemResource } from \"@/types/types.ts\";\nimport { tmDiscs } from \"@/data/tmDiscs.ts\";\nimport tmDiscsImage from \"/tm-discs.webp\";\n\nimport Loader from \"@/components/Loader.tsx\";\nimport MoveInfoDisplay from \"@/features/moves/components/MoveInfoDisplay.tsx\";\n\ninterface CardProps {\n  move: ItemResource;\n}\n\nconst MoveCard = memo(({ move: { id, name } }: CardProps) => {\n  const { data: move } = useMove(id);\n\n  return (\n    <Link\n      to=\"/moves/$moveId\"\n      params={{ moveId: String(id) }}\n      className=\"@container/card relative flex rounded-xl bg-base-100 shadow-md transition-[background-color_shadow] hover:bg-base-200 hover:shadow-lg dark:bg-base-900 dark:shadow-none dark:hover:bg-base-800 dark:hover:shadow-none\"\n    >\n      {move ? (\n        <div\n          className=\"-m-7 inline-block h-34.25 w-33 scale-40\"\n          style={{\n            backgroundImage: `url(${tmDiscsImage})`,\n            backgroundPosition: `${tmDiscs[move.type.name].sprite.x}px ${tmDiscs[move.type.name].sprite.y}px`,\n          }}\n        />\n      ) : (\n        // The loader has the same positioning classes as the image to ensure no layout shifts\n        <div className=\"-m-7 inline-block h-34.25 w-33 scale-40\">\n          <Loader size={20} />\n        </div>\n      )}\n\n      <div className=\"w-[calc(100%-76px)]\">\n        <h1 className=\"my-1 overflow-scroll px-1 text-lg font-bold text-nowrap capitalize\">\n          {name.split(\"-\").join(\" \")}\n        </h1>\n\n        <MoveInfoDisplay\n          move={move}\n          className=\"-mx-6 -my-1 scale-75 @min-[275px]/card:-mx-2 @min-[275px]/card:scale-90 @min-[300px]/card:m-1 @min-[300px]/card:scale-100\"\n        />\n      </div>\n    </Link>\n  );\n});\nMoveCard.displayName = \"MoveCard\";\nexport default MoveCard;\n","import { useState } from \"react\";\nimport { VirtuosoGrid } from \"react-virtuoso\";\n\nimport { useAllMoves } from \"@/hooks/usePokeApi.ts\";\nimport { useFilteredMoves } from \"@/features/moves/hooks/useFilteredMoves.ts\";\nimport { useScrollRestoration } from \"@/hooks/useScrollRestoration.ts\";\n\nimport MoveCard from \"@/features/moves/components/MoveCard.tsx\";\nimport Footer from \"@/components/Footer.tsx\";\nimport Loader from \"@/components/Loader.tsx\";\nimport FilterErrorMessage from \"@/components/error/FilterErrorMessage.tsx\";\n\nconst MoveGrid = () => {\n  // Fetching data\n  const { data: allMoves, isLoading: isLoadingAM } = useAllMoves();\n  const { moveList, isLoading, isFiltered } = useFilteredMoves(allMoves);\n\n  // Restore the scroll position when the grid loads\n  const [gridLoaded, setGridLoaded] = useState<boolean>(false);\n  useScrollRestoration(gridLoaded);\n\n  return (\n    <section className=\"@container/grid flex flex-col items-center p-4 max-sm:px-2 lg:absolute lg:right-0 lg:w-4/5 lg:max-w-[calc(100vw-248px)] lg:min-w-[calc(100vw-320px)] lg:pt-20 lg:pl-0\">\n      {!isLoadingAM && !isLoading && moveList?.length ? (\n        <>\n          <VirtuosoGrid\n            totalCount={moveList.length}\n            itemContent={(index) => (\n              <MoveCard key={moveList[index].name} move={moveList[index]} />\n            )}\n            useWindowScroll\n            increaseViewportBy={{ top: 1000, bottom: 1000 }}\n            readyStateChanged={(ready) => setGridLoaded(ready)}\n            className=\"w-full\"\n            listClassName=\"grid grid-cols-1 gap-2 @min-[500px]/grid:grid-cols-2 @min-[600px]/grid:gap-4 @min-[750px]/grid:grid-cols-3 @min-[750px]/grid:gap-2 @min-[875px]/grid:gap-4 @min-[1000px]/grid:grid-cols-4 @min-[1000px]/grid:gap-2 @min-[1150px]/grid:gap-4 @min-[1250px]/grid:grid-cols-5 @min-[1250px]/grid:gap-2 @min-[1400px]/grid:gap-4 @min-[1500px]/grid:grid-cols-6 @min-[1500px]/grid:gap-2 @min-[1700px]/grid:gap-4\"\n          />\n\n          {gridLoaded && <Footer />}\n        </>\n      ) : null}\n\n      {/* Cover with a loading screen while the data is fetching or the React Virtuoso grid is rendering */}\n      {isLoadingAM || isLoading || (!gridLoaded && moveList?.length) ? (\n        <div className=\"fixed top-0 z-10 flex h-screen w-full items-center justify-center bg-base-50 dark:bg-base-950\">\n          <Loader size={24} displaysText={true} />\n        </div>\n      ) : null}\n\n      {!moveList?.length && isFiltered && (\n        <div className=\"top-0 lg:fixed lg:h-screen\">\n          <FilterErrorMessage itemType=\"moves\" />\n        </div>\n      )}\n    </section>\n  );\n};\nexport default MoveGrid;\n","import { useEffect } from \"react\";\nimport { createFileRoute, useRouter } from \"@tanstack/react-router\";\n\nimport type { AllItemsParams } from \"@/types/types.ts\";\n\nimport Sidebar from \"@/components/sidebar/Sidebar.tsx\";\nimport ScrollToTopButton from \"@/components/button/ScrollToTopButton.tsx\";\nimport MoveGrid from \"@/features/moves/components/MoveGrid.tsx\";\n\nconst AllMoves = () => {\n  // Preload the individual move page\n  const router = useRouter();\n  useEffect(() => {\n    void router.loadRouteChunk(router.routesByPath[\"/moves/$moveId\"]);\n  }, [router]);\n\n  return (\n    <>\n      <Sidebar>\n        <Sidebar.Search itemType=\"move\" />\n        <Sidebar.GenerationFilter />\n        <Sidebar.TypeFilter />\n        <Sidebar.ClearFilter />\n      </Sidebar>\n\n      <ScrollToTopButton />\n\n      <MoveGrid />\n    </>\n  );\n};\n\nexport const Route = createFileRoute(\"/moves/\")({\n  component: AllMoves,\n  validateSearch: (search) => ({ ...search }) as AllItemsParams,\n  loader: ({ context: { queryClient, pokeApi } }) =>\n    // Prefetch the list of all Moves\n    void queryClient.ensureQueryData({\n      queryFn: () => pokeApi.getMovesList(),\n      queryKey: [\"allMoves\"],\n    }),\n});\n"],"mappings":"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"}