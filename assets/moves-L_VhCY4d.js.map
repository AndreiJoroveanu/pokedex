{"version":3,"file":"moves-L_VhCY4d.js","names":["useMemo","useAllItemsParam","useAllMovesByGen","useAllMovesByType","ItemResource","useFilteredMoves","allMoves","$","_c","currentGen","currentType","searchQuery","data","filteredByGen","isLoading","isLoadingFG","filteredByType","isLoadingFT","t0","bb0","undefined","length","t1","t2","pg","Set","map","_temp","has","id","filter","filteredMoves","query","replace","trim","p","name","split","join","includes","toLowerCase","searchedMoves","t3","t4","Boolean","t5","moveList","isFiltered","pt","Link","useMove","ItemResource","tmDiscs","tmDiscsImage","Loader","MoveInfoDisplay","CardProps","move","MoveCard","t0","$","_c","t1","id","name","data","t2","String","t3","moveId","t4","backgroundImage","backgroundPosition","type","sprite","x","y","t5","split","join","t6","t7","t8","t9","t10","useState","VirtuosoGrid","useAllMoves","useFilteredMoves","useScrollRestoration","MoveCard","Footer","Loader","FilterErrorMessage","MoveGrid","$","_c","data","allMoves","isLoading","isLoadingAM","moveList","isFiltered","gridLoaded","setGridLoaded","t0","length","index","name","top","bottom","ready","t1","t2","t3","useEffect","useRouter","Sidebar","ScrollToTopButton","MoveGrid","Route","SplitComponent","router","loadRouteChunk","routesByPath","component"],"sources":["../../src/features/moves/hooks/useFilteredMoves.ts","../../src/features/moves/components/MoveCard.tsx","../../src/features/moves/components/MoveGrid.tsx","../../src/routes/moves/index.tsx?tsr-split=component"],"sourcesContent":["import { useMemo } from \"react\";\n\nimport { useAllItemsParam } from \"@/hooks/useAllItemsParam.ts\";\nimport { useAllMovesByGen, useAllMovesByType } from \"@/hooks/usePokeApi.ts\";\nimport type { ItemResource } from \"@/types/types.ts\";\n\nexport const useFilteredMoves = (allMoves: ItemResource[] | undefined) => {\n  // Get the URL Params\n  const [currentGen] = useAllItemsParam(\"generation\");\n  const [currentType] = useAllItemsParam(\"type\");\n  const [searchQuery] = useAllItemsParam(\"q\");\n\n  // Fetch moves filtered by gen/type\n  const { data: filteredByGen, isLoading: isLoadingFG } =\n    useAllMovesByGen(currentGen);\n  const { data: filteredByType, isLoading: isLoadingFT } =\n    useAllMovesByType(currentType);\n\n  // Move filtering\n  const filteredMoves = useMemo(() => {\n    // Abort if the all moves list hasn't fetched yet\n    if (!allMoves) return;\n\n    // If there is a gen and a type selected\n    if (filteredByGen?.length && filteredByType?.length)\n      return filteredByGen.filter((pg) =>\n        new Set(filteredByType.map((pt) => pt.id)).has(pg.id),\n      );\n\n    // If there is a gen selected\n    if (filteredByGen?.length) return filteredByGen;\n\n    // If there is a type selected\n    if (filteredByType?.length) return filteredByType;\n\n    // No filtering\n    return allMoves;\n  }, [allMoves, filteredByGen, filteredByType]);\n\n  // Displayed moves (after search query filtering, if needed)\n  const searchedMoves = useMemo(() => {\n    // Removes non-alphanumerical characters from search query\n    const query = searchQuery?.replace(/[^0-9a-z]/gi, \"\").trim();\n\n    return filteredMoves && query?.length\n      ? filteredMoves.filter((p) =>\n          p.name.split(\"-\").join(\"\").includes(query.toLowerCase()),\n        )\n      : filteredMoves;\n  }, [filteredMoves, searchQuery]);\n\n  return {\n    moveList: searchedMoves,\n    isLoading: isLoadingFG || isLoadingFT,\n    isFiltered: Boolean(currentGen ?? currentType ?? searchQuery),\n  };\n};\n","import { Link } from \"@tanstack/react-router\";\n\nimport { useMove } from \"@/hooks/usePokeApi.ts\";\nimport type { ItemResource } from \"@/types/types.ts\";\nimport { tmDiscs } from \"@/data/tmDiscs.ts\";\nimport tmDiscsImage from \"/tm-discs.webp\";\n\nimport Loader from \"@/components/Loader.tsx\";\nimport MoveInfoDisplay from \"@/features/moves/components/MoveInfoDisplay.tsx\";\n\ninterface CardProps {\n  move: ItemResource;\n}\n\nconst MoveCard = ({ move: { id, name } }: CardProps) => {\n  const { data: move } = useMove(id);\n\n  return (\n    <Link to=\"/moves/$moveId\" params={{ moveId: String(id) }}>\n      <article className=\"@container/card relative rounded-xl bg-base-200 shadow-lg transition-[background-color_shadow] hover:bg-base-300 hover:shadow-xl dark:bg-base-800 dark:shadow-none dark:hover:bg-base-700 dark:hover:shadow-none\">\n        <div className=\"flex\">\n          {move ? (\n            <div\n              className=\"-m-7 inline-block h-34.25 w-33 scale-40\"\n              style={{\n                backgroundImage: `url(${tmDiscsImage})`,\n                backgroundPosition: `${tmDiscs[move.type.name].sprite.x}px ${tmDiscs[move.type.name].sprite.y}px`,\n              }}\n            />\n          ) : (\n            // The loader has the same positioning classes as the image to ensure no layout shifts\n            <div className=\"-m-7 inline-block h-34.25 w-33 scale-40\">\n              <Loader size={20} />\n            </div>\n          )}\n\n          <div className=\"w-[calc(100%-76px)]\">\n            <h1 className=\"my-1 overflow-scroll px-1 text-lg font-bold text-nowrap capitalize\">\n              {name.split(\"-\").join(\" \")}\n            </h1>\n\n            <MoveInfoDisplay\n              move={move}\n              className=\"-mx-6 -my-1 scale-75 @min-[275px]/card:-mx-2 @min-[275px]/card:scale-90 @min-[300px]/card:m-1 @min-[300px]/card:scale-100\"\n            />\n          </div>\n        </div>\n      </article>\n    </Link>\n  );\n};\nexport default MoveCard;\n","import { useState } from \"react\";\nimport { VirtuosoGrid } from \"react-virtuoso\";\n\nimport { useAllMoves } from \"@/hooks/usePokeApi.ts\";\nimport { useFilteredMoves } from \"@/features/moves/hooks/useFilteredMoves.ts\";\nimport { useScrollRestoration } from \"@/hooks/useScrollRestoration.ts\";\n\nimport MoveCard from \"@/features/moves/components/MoveCard.tsx\";\nimport Footer from \"@/components/Footer.tsx\";\nimport Loader from \"@/components/Loader.tsx\";\nimport FilterErrorMessage from \"@/components/error/FilterErrorMessage.tsx\";\n\nconst MoveGrid = () => {\n  // Fetching data\n  const { data: allMoves, isLoading: isLoadingAM } = useAllMoves();\n  const { moveList, isLoading, isFiltered } = useFilteredMoves(allMoves);\n\n  // Restore the scroll position when the grid loads\n  const [gridLoaded, setGridLoaded] = useState<boolean>(false);\n  useScrollRestoration(gridLoaded);\n\n  return (\n    <section className=\"@container/grid flex flex-col items-center p-4 max-sm:px-2 lg:absolute lg:right-0 lg:w-4/5 lg:max-w-[calc(100vw-248px)] lg:min-w-[calc(100vw-320px)] lg:pt-20 lg:pl-0\">\n      {!isLoadingAM && !isLoading && moveList?.length ? (\n        <>\n          <VirtuosoGrid\n            totalCount={moveList.length}\n            itemContent={(index) => (\n              <MoveCard key={moveList[index].name} move={moveList[index]} />\n            )}\n            useWindowScroll\n            increaseViewportBy={{ top: 1000, bottom: 1000 }}\n            readyStateChanged={(ready) => setGridLoaded(ready)}\n            className=\"w-full\"\n            listClassName=\"grid grid-cols-1 gap-2 @min-[500px]/grid:grid-cols-2 @min-[600px]/grid:gap-4 @min-[750px]/grid:grid-cols-3 @min-[750px]/grid:gap-2 @min-[875px]/grid:gap-4 @min-[1000px]/grid:grid-cols-4 @min-[1000px]/grid:gap-2 @min-[1150px]/grid:gap-4 @min-[1250px]/grid:grid-cols-5 @min-[1250px]/grid:gap-2 @min-[1400px]/grid:gap-4 @min-[1500px]/grid:grid-cols-6 @min-[1500px]/grid:gap-2 @min-[1700px]/grid:gap-4\"\n          />\n\n          {gridLoaded && <Footer />}\n        </>\n      ) : null}\n\n      {/* Cover with a loading screen while the data is fetching or the React Virtuoso grid is rendering */}\n      {isLoadingAM || isLoading || (!gridLoaded && moveList?.length) ? (\n        <div className=\"fixed top-0 flex h-screen w-full items-center justify-center bg-base-100 dark:bg-base-900\">\n          <Loader size={24} displaysText={true} />\n        </div>\n      ) : null}\n\n      {!moveList?.length && isFiltered && (\n        <div className=\"top-0 lg:fixed lg:h-screen\">\n          <FilterErrorMessage itemType=\"moves\" />\n        </div>\n      )}\n    </section>\n  );\n};\nexport default MoveGrid;\n","import { useEffect } from \"react\";\nimport { createFileRoute, useRouter } from \"@tanstack/react-router\";\n\nimport type { AllItemsParams } from \"@/types/types.ts\";\n\nimport Sidebar from \"@/components/sidebar/Sidebar.tsx\";\nimport ScrollToTopButton from \"@/components/button/ScrollToTopButton.tsx\";\nimport MoveGrid from \"@/features/moves/components/MoveGrid.tsx\";\n\nconst AllMoves = () => {\n  // Preload the individual move page\n  const router = useRouter();\n  useEffect(() => {\n    void router.loadRouteChunk(router.routesByPath[\"/moves/$moveId\"]);\n  }, [router]);\n\n  return (\n    <>\n      <Sidebar>\n        <Sidebar.Search itemType=\"move\" />\n        <Sidebar.GenerationFilter />\n        <Sidebar.TypeFilter />\n        <Sidebar.ClearFilter />\n      </Sidebar>\n\n      <ScrollToTopButton />\n\n      <MoveGrid />\n    </>\n  );\n};\n\nexport const Route = createFileRoute(\"/moves/\")({\n  component: AllMoves,\n  validateSearch: (search) => ({ ...search }) as AllItemsParams,\n  loader: ({ context: { queryClient, pokeApi } }) =>\n    // Prefetch the list of all Moves\n    void queryClient.ensureQueryData({\n      queryFn: () => pokeApi.getMovesList(),\n      queryKey: [\"allMoves\"],\n    }),\n});\n"],"mappings":"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"}