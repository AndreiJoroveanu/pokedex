{"version":3,"file":"useStarredPokemon-4tEq8n51.js","names":["orderSearchParams","rawParams","Partial","T","order","orderedParams","forEach","key","useEffect","useState","useLocalStorageState","initialState","key","$","_c","t0","JSON","parse","localStorage","getItem","T","value","setValue","t1","t2","setItem","stringify","t3","const","useLocalStorageState","useStarredPokemon","$","_c","t0","Symbol","for","starredPokemonIds","setStarredPokemonIds","t1","pokemonId","prevPokemon","includes","filter","p","toggleStarredPokemonIds","length","t2"],"sources":["../../src/utils/orderSearchParams.ts","../../src/hooks/useLocalStorageState.ts","../../src/features/pokemon/hooks/useStarredPokemon.ts"],"sourcesContent":["export const orderSearchParams = <T extends object>(\n  rawParams: Partial<T>,\n  order: (keyof T)[],\n): Partial<T> => {\n  const orderedParams: Partial<T> = {};\n\n  order.forEach((key) => (orderedParams[key] = rawParams[key]));\n\n  return orderedParams;\n};\n","import { useEffect, useState } from \"react\";\n\nexport const useLocalStorageState = <T>(initialState: T, key: string) => {\n  const [value, setValue] = useState<T>(\n    // Get the initial state from localStorage\n    (JSON.parse(localStorage.getItem(key)!) as T) ?? initialState,\n  );\n\n  useEffect(() => {\n    // Set the variable into localStorage when the state changes\n    localStorage.setItem(key, JSON.stringify(value));\n  }, [value, key]);\n\n  return [value, setValue] as const;\n};\n","import { useLocalStorageState } from \"@/hooks/useLocalStorageState.ts\";\n\nexport const useStarredPokemon = () => {\n  const [starredPokemonIds, setStarredPokemonIds] = useLocalStorageState<\n    number[]\n  >([], \"starredPokemonIds\");\n\n  const toggleStarredPokemonIds = (pokemonId: number) =>\n    setStarredPokemonIds((prevPokemon) =>\n      starredPokemonIds.includes(pokemonId)\n        ? // Filter the PokÃ©mon out if it already exists\n          prevPokemon.filter((p) => p !== pokemonId)\n        : // Otherwise add it in the array\n          [...prevPokemon, pokemonId],\n    );\n\n  const { length } = starredPokemonIds;\n\n  return { starredPokemonIds, toggleStarredPokemonIds, length };\n};\n"],"mappings":"sDAAA,MAAaA,EAAoB,CAC/BC,EACAG,IACe,CACf,IAAMC,EAA4B,CAAE,EAIpC,OAFAD,EAAME,QAASM,GAASP,EAAcO,GAAOX,EAAUW,GAAM,CAEtDP,CACR,wBCPD,MAAawB,EAAuBA,CAAAlB,EAAAC,IAAA,CAAA,IAAAmB,GAAAA,EAAAA,EAAAA,GAAA,EAAA,CAAAE,EAAAF,EAAA,KAAApB,GAAAoB,EAAA,KAAAnB,GAGhCqB,EAACjB,KAAAC,MAAWC,aAAAC,QAAqBP,EAAK,CAAC,EAAUD,EAAYoB,EAAA,GAAApB,EAAAoB,EAAA,GAAAnB,EAAAmB,EAAA,GAAAE,GAAAA,EAAAF,EAAA,GAF/D,GAAA,CAAAV,EAAAC,EAAA,EAAA,EAAA,EAAA,UAEEW,EACD,CAACK,EAAAQ,EAAAf,EAAA,KAAAnB,GAAAmB,EAAA,KAAAV,GAEQiB,EAAAA,IAAA,CAERpB,aAAAO,QAAqBb,EAAKI,KAAAU,UAAeL,EAAM,CAAC,EAC/CyB,EAAA,CAACzB,EAAOT,CAAG,EAACmB,EAAA,GAAAnB,EAAAmB,EAAA,GAAAV,EAAAU,EAAA,GAAAO,EAAAP,EAAA,GAAAe,IAAAR,EAAAP,EAAA,GAAAe,EAAAf,EAAA,oBAHLO,EAGPQ,EAAa,CAAA,IAAAnB,EAEQ,OAFRI,EAAA,KAAAV,EAEQM,EAAAI,EAAA,IAAjBJ,EAAA,CAACN,EAAOC,CAAQ,EAACS,EAAA,GAAAV,EAAAU,EAAA,GAAAJ,GAAjBA,CACR,eCZD,MAAaG,EAAoBA,IAAA,CAAA,IAAAC,GAAAA,EAAAA,EAAAA,GAAA,EAAA,CAAAE,EAAAF,EAAA,KAAAG,OAAAC,IAAA,4BAAA,EAG7BF,EAAA,CAAA,EAAEF,EAAA,GAAAE,GAAAA,EAAAF,EAAA,GAFJ,GAAA,CAAAK,EAAAC,EAAA,CAAkDR,EAEhDI,EAAI,oBAAoB,CAACK,EAAAP,EAAA,KAAAM,GAAAN,EAAA,KAAAK,GAEKE,EAAAC,GAC9BF,EAAoBG,GAClBJ,EAAiBK,SAAUF,EAAU,CAEjCC,EAAWE,OAAAC,GAAeA,IAAMJ,EAAU,CAAA,CAAA,GAEtCC,EAAaD,CACvB,EAAC,CAAAR,EAAA,GAAAM,EAAAN,EAAA,GAAAK,EAAAL,EAAA,GAAAO,GAAAA,EAAAP,EAAA,GAPH,IAAAa,EAAgCN,EAShC,CAAAO,SAAA,CAAmBT,EAAkBU,EAEwB,OAFxBf,EAAA,KAAAc,GAAAd,EAAA,KAAAK,GAAAL,EAAA,KAAAa,GAE9BE,EAAA,CAAAV,oBAAAQ,0BAAAC,QAAA,EAAsDd,EAAA,GAAAc,EAAAd,EAAA,GAAAK,EAAAL,EAAA,GAAAa,EAAAb,EAAA,GAAAe,GAAAA,EAAAf,EAAA,GAAtDe,CACR"}