/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as PokemonIndexImport } from './routes/pokemon.index'
import { Route as MovesIndexImport } from './routes/moves.index'
import { Route as PokemonPokemonIdImport } from './routes/pokemon.$pokemonId'
import { Route as MovesMoveIdImport } from './routes/moves.$moveId'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PokemonIndexRoute = PokemonIndexImport.update({
  id: '/pokemon/',
  path: '/pokemon/',
  getParentRoute: () => rootRoute,
} as any)

const MovesIndexRoute = MovesIndexImport.update({
  id: '/moves/',
  path: '/moves/',
  getParentRoute: () => rootRoute,
} as any)

const PokemonPokemonIdRoute = PokemonPokemonIdImport.update({
  id: '/pokemon/$pokemonId',
  path: '/pokemon/$pokemonId',
  getParentRoute: () => rootRoute,
} as any)

const MovesMoveIdRoute = MovesMoveIdImport.update({
  id: '/moves/$moveId',
  path: '/moves/$moveId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/moves/$moveId': {
      id: '/moves/$moveId'
      path: '/moves/$moveId'
      fullPath: '/moves/$moveId'
      preLoaderRoute: typeof MovesMoveIdImport
      parentRoute: typeof rootRoute
    }
    '/pokemon/$pokemonId': {
      id: '/pokemon/$pokemonId'
      path: '/pokemon/$pokemonId'
      fullPath: '/pokemon/$pokemonId'
      preLoaderRoute: typeof PokemonPokemonIdImport
      parentRoute: typeof rootRoute
    }
    '/moves/': {
      id: '/moves/'
      path: '/moves'
      fullPath: '/moves'
      preLoaderRoute: typeof MovesIndexImport
      parentRoute: typeof rootRoute
    }
    '/pokemon/': {
      id: '/pokemon/'
      path: '/pokemon'
      fullPath: '/pokemon'
      preLoaderRoute: typeof PokemonIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/moves/$moveId': typeof MovesMoveIdRoute
  '/pokemon/$pokemonId': typeof PokemonPokemonIdRoute
  '/moves': typeof MovesIndexRoute
  '/pokemon': typeof PokemonIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/moves/$moveId': typeof MovesMoveIdRoute
  '/pokemon/$pokemonId': typeof PokemonPokemonIdRoute
  '/moves': typeof MovesIndexRoute
  '/pokemon': typeof PokemonIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/moves/$moveId': typeof MovesMoveIdRoute
  '/pokemon/$pokemonId': typeof PokemonPokemonIdRoute
  '/moves/': typeof MovesIndexRoute
  '/pokemon/': typeof PokemonIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/moves/$moveId'
    | '/pokemon/$pokemonId'
    | '/moves'
    | '/pokemon'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/moves/$moveId' | '/pokemon/$pokemonId' | '/moves' | '/pokemon'
  id:
    | '__root__'
    | '/'
    | '/moves/$moveId'
    | '/pokemon/$pokemonId'
    | '/moves/'
    | '/pokemon/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  MovesMoveIdRoute: typeof MovesMoveIdRoute
  PokemonPokemonIdRoute: typeof PokemonPokemonIdRoute
  MovesIndexRoute: typeof MovesIndexRoute
  PokemonIndexRoute: typeof PokemonIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  MovesMoveIdRoute: MovesMoveIdRoute,
  PokemonPokemonIdRoute: PokemonPokemonIdRoute,
  MovesIndexRoute: MovesIndexRoute,
  PokemonIndexRoute: PokemonIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/moves/$moveId",
        "/pokemon/$pokemonId",
        "/moves/",
        "/pokemon/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/moves/$moveId": {
      "filePath": "moves.$moveId.tsx"
    },
    "/pokemon/$pokemonId": {
      "filePath": "pokemon.$pokemonId.tsx"
    },
    "/moves/": {
      "filePath": "moves.index.tsx"
    },
    "/pokemon/": {
      "filePath": "pokemon.index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
